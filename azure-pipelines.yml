# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'ionicblank-certificates.p12'
    certPwd: "$(CERT_PASSWORD)"
    keychain: 'temp'
    keychainPassword: "$(KEY_CHAIN_PASSWORD)"

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'ionicblank.mobileprovision'

- task: Xcode@5
  inputs:
    actions: 'build'
    scheme: ""
    sdk: 'iphoneos'
    configuration: 'Release'
    xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
    xcodeVersion: 'default' # Options: 8, 9, 10, 11, 12, default, specifyPath

- script: |
    echo 'source "https://rubygems.org"
          gem "fastlane", ">= 2.221.1"' > Gemfile
    bundle install
  displayName: 'Create Gemfile and Install Dependencies'
  
- script: |
    sudo gem install bundler
    sudo gem install fastlane
    bundle install
  displayName: 'Install Bundler, Fastlane and dependencies'


- script: |
    mkdir -p fastlane
    echo 'default_platform(:ios)
          lane :upload do
            api_key = app_store_connect_api_key(
              key_id: ENV["APP_STORE_CONNECT_API_KEY_JSON"]["key_id"],
              issuer_id: ENV["APP_STORE_CONNECT_API_KEY_JSON"]["issuer_id"],
              key_content: ENV["APP_STORE_CONNECT_API_KEY_JSON"]["private_key"]
            )
            build_app(scheme: "", export_method: "app-store", output_directory: "./output")
            upload_to_testflight(api_key: api_key)
          end' > fastlane/Fastfile
  displayName: 'Configure Fastlane'
  
# - script: |
#     mkdir -p fastlane
#     echo 'json_key_content("$(APP_STORE_CONNECT_API_KEY_JSON)")' > fastlane/Appfile
#     echo 'default_platform(:ios)
#           lane :upload do
#             app_store_connect_api_key(
#               key_id: ENV['APPLE_API_KEY_ID'],
#               issuer_id: ENV['APPLE_API_ISSUER_ID'],
#               key_content: ENV['APP_STORE_CONNECT_API_KEY_JSON']
#             )
#             build_app(scheme: "YourAppScheme", export_method: "app-store", output_directory: "./output")
#             upload_to_testflight
#           end' > fastlane/Fastfile
#   displayName: 'Configure Fastlane'

- script: |
    bundle exec fastlane upload
  displayName: 'Upload to TestFlight'

# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '3.x'
#     addToPath: true

# - script: |
#     pip install --upgrade pip
#     pip install fastlane
#   displayName: 'Install Fastlane'

# - script: |
#     mkdir -p fastlane
#     echo 'json_key_content("$(APP_STORE_CONNECT_API_KEY_JSON)")' > fastlane/Appfile
#     echo 'default_platform(:ios)
#           lane :upload do
#             build_app(scheme: "", export_method: "app-store", output_directory: "./output")
#             upload_to_testflight
#           end' > fastlane/Fastfile
#   displayName: 'Configure Fastlane'

# - script: |
#     fastlane upload
#   displayName: 'Upload to TestFlight'